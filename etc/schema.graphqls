type Query {
    paycomet_token: [paycomet_token] @resolver(class: "Paycomet\\Payment\\Model\\Resolver\\Tokens") @doc(description: "Paycomet card tokens of a customer")
    paycomet_cardOfferSave: Int @resolver(class: "Paycomet\\Payment\\Model\\Resolver\\OfferSave") @doc(description: "Paycomet card offer save")
}

type paycomet_token {
    iduser: Int
    tokenuser: String
    cc: String
    brand: String
    expiry: String
    desc: String
}


type Mutation {
    paycomet_removeUserToken(iduser: ID! @doc(description: "The iduser of a token to remove from customer.")): paycomet_removeUserTokenOutput @resolver(class: "Paycomet\\Payment\\Model\\Resolver\\RemoveUserToken") @doc(description:"Delete the user token.")
    paycomet_paymentSaveCard(input: paycomet_paymentSaveCardInput @doc(description: "An input object that defines order_id and save_card value")): paycomet_paymentSaveCardOutput @resolver(class: "Paycomet\\Payment\\Model\\Resolver\\PaymentSaveCard") @doc(description:"Save as additional information save_card in the order payment.")
}

type paycomet_removeUserTokenOutput @doc(description: "Contains details of the remove user token result.") {
    result: Int! @doc(description: "0: not removed, 1: removed")
}

input paycomet_paymentSaveCardInput @doc(description: "order_id and save_card to store as additional info in order payment") {
    order_id: String! @doc(description: "The unique ID for an `Order` object.")
    save_card: Int! @doc(description: "0: not save, 1: save")
}

type paycomet_paymentSaveCardOutput @doc(description: "Contains details about the save_card result.") {
    result: Int! @doc(description: "0: not saved, 1: saved")
}
